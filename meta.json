{"compiler":{"version":"0.8.9+commit.e5eed63a"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"FW_FAIl_TRANSFER_ETH","type":"error"},{"inputs":[],"name":"FW_INVALID_HASH","type":"error"},{"inputs":[],"name":"FW_NOT_AVAILABLE_POSITION","type":"error"},{"inputs":[],"name":"FW_NOT_SEARCH_POSITION","type":"error"},{"inputs":[],"name":"FW_ONLY_CLOSER","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_l1Token","type":"address"},{"indexed":true,"internalType":"address","name":"_l2Token","type":"address"},{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":false,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_data","type":"bytes"}],"name":"ERC20DepositInitiated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_l1Token","type":"address"},{"indexed":true,"internalType":"address","name":"_l2Token","type":"address"},{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":false,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_data","type":"bytes"}],"name":"ERC20WithdrawalFinalized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":true,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_data","type":"bytes"}],"name":"ETHDepositInitiated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_from","type":"address"},{"indexed":true,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_data","type":"bytes"}],"name":"ETHWithdrawalFinalized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_index","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"_claimer","type":"address"}],"name":"ForceWithdraw","type":"event"},{"inputs":[],"name":"active","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"depositERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"depositERC20To","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint32","name":"_l2Gas","type":"uint32"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"depositETHTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"deposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"donateETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_l1Token","type":"address"},{"internalType":"address","name":"_l2Token","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"finalizeERC20Withdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"finalizeETHWithdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_state","type":"bool"}],"name":"forceActive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"position","type":"address"},{"internalType":"bool","name":"state","type":"bool"}],"internalType":"struct UpgradeL1Bridge.ForceRegistryParam[]","name":"_data","type":"tuple[]"}],"name":"forceModify","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_position","type":"address[]"}],"name":"forceRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_position","type":"address"},{"internalType":"string","name":"_hash","type":"string"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"forceWithdrawClaim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"position","type":"address"},{"internalType":"string","name":"hashed","type":"string"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct UpgradeL1Bridge.ForceClaimParam[]","name":"params","type":"tuple[]"}],"name":"forceWithdrawClaimAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"gb","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_key","type":"string"}],"name":"getForcePosition","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_l1messenger","type":"address"},{"internalType":"address","name":"_l2TokenBridge","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"l2TokenBridge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"messenger","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"position","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"positions","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"Provides functionalities to control contract activation state through access restricted to a designated address","kind":"dev","methods":{"depositERC20(address,address,uint256,uint32,bytes)":{"details":"deposit an amount of the ERC20 to the caller's balance on L2.","params":{"_amount":"Amount of the ERC20 to deposit","_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_l1Token":"Address of the L1 ERC20 we are depositing","_l2Gas":"Gas limit required to complete the deposit on L2.","_l2Token":"Address of the L1 respective L2 ERC20"}},"depositERC20To(address,address,address,uint256,uint32,bytes)":{"details":"deposit an amount of ERC20 to a recipient's balance on L2.","params":{"_amount":"Amount of the ERC20 to deposit.","_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_l1Token":"Address of the L1 ERC20 we are depositing","_l2Gas":"Gas limit required to complete the deposit on L2.","_l2Token":"Address of the L1 respective L2 ERC20","_to":"L2 address to credit the withdrawal to."}},"depositETH(uint32,bytes)":{"details":"Deposit an amount of the ETH to the caller's balance on L2.","params":{"_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_l2Gas":"Gas limit required to complete the deposit on L2."}},"depositETHTo(address,uint32,bytes)":{"details":"Deposit an amount of ETH to a recipient's balance on L2.","params":{"_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_l2Gas":"Gas limit required to complete the deposit on L2.","_to":"L2 address to credit the withdrawal to."}},"donateETH()":{"details":"Adds ETH balance to the account. This is meant to allow for ETH to be migrated from an old gateway to a new gateway. NOTE: This is left for one upgrade only so we are able to receive the migrated ETH from the old contract"},"finalizeERC20Withdrawal(address,address,address,address,uint256,bytes)":{"details":"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ERC20 token. This call will fail if the initialized withdrawal from L2 has not been finalized.","params":{"_amount":"Amount of the ERC20 to deposit.","_data":"Data provided by the sender on L2. This data is provided   solely as a convenience for external contracts. Aside from enforcing a maximum   length, these contracts provide no guarantees about its content.","_from":"L2 address initiating the transfer.","_l1Token":"Address of L1 token to finalizeWithdrawal for.","_l2Token":"Address of L2 token where withdrawal was initiated.","_to":"L1 address to credit the withdrawal to."}},"finalizeETHWithdrawal(address,address,uint256,bytes)":{"details":"Complete a withdrawal from L2 to L1, and credit funds to the recipient's balance of the L1 ETH token. Since only the xDomainMessenger can call this function, it will never be called before the withdrawal is finalized.","params":{"_amount":"Amount of the ERC20 to deposit.","_data":"Optional data to forward to L2. This data is provided        solely as a convenience for external contracts. Aside from enforcing a maximum        length, these contracts provide no guarantees about its content.","_from":"L2 address initiating the transfer.","_to":"L1 address to credit the withdrawal to."}},"forceActive(bool)":{"details":"Sets the contract's active state to the value provided in _state","params":{"_state":"The new active state of the contract"}},"forceModify((address,bool)[])":{"params":{"_data":"A registered address and a state to be initialized are required."}},"forceRegistry(address[])":{"params":{"_position":"Forced withdrawal storage contract distribution address where the hash value is stored"}},"forceWithdrawClaim(address,string,address,uint256)":{"params":{"_amount":"Amount of tokens to receive.","_hash":"Hash value of token information that can be force withdaraw from the L1 bridge.","_position":"Contract address where the _hash value is stored.","_token":"L1 token address to receive."}},"forceWithdrawClaimAll((address,string,address,uint256)[])":{"params":{"params":"Receive the token information to be received and the storage address of the hash."}},"getForcePosition(string)":{"params":{"_key":"Forced withdrawal storage contract distribution address where the hash value is stored"}},"initialize(address,address)":{"params":{"_l1messenger":"L1 Messenger address being used for cross-chain communications.","_l2TokenBridge":"L2 standard bridge address."}}},"title":"Contract Activation Control","version":1},"userdoc":{"kind":"user","methods":{"active()":{"notice":"Indicates whether the protocol is active. When running an automated script, the status is tracked and set to True."},"forceActive(bool)":{"notice":"Toggles the active state of the contract"},"forceModify((address,bool)[])":{"notice":"Change the status of a registered storage address."},"forceRegistry(address[])":{"notice":"Register the contract address where data that can be forced to be withdrawn is stored. Forced withdrawals can be made by only referring to the storage address set to true."},"forceWithdrawClaim(address,string,address,uint256)":{"notice":"It is a single forced withdrawal function."},"forceWithdrawClaimAll((address,string,address,uint256)[])":{"notice":"The owner of the L1 token receives information about the asset to be received.  The most important thing is that you can only receive tokens that you own."},"gb(bytes32)":{"notice":"(token,claim,amount) Hashed value => address of the claimer."},"getForcePosition(string)":{"notice":"Register the contract address where data that can be forced to be withdrawn is stored."},"position(address)":{"notice":"GenFWStorage{x}.sol Stores the addresses of the contract => Active status of storage, false is not available."},"positions(uint256)":{"notice":"(token,claim,amount) Stores Hashed value, used to check position status in front service."}},"version":1}},"settings":{"compilationTarget":{"contracts/UpgradeL1Bridge.sol":"UpgradeL1Bridge"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":10000},"remappings":[]},"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305","license":"MIT","urls":["bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5","dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"]},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69","license":"MIT","urls":["bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71","dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5"]},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1","license":"MIT","urls":["bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68","dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa","license":"MIT","urls":["bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931","dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"]},"contracts/L1StandardBridge.sol":{"keccak256":"0xd2581f955f5fc4a31f211bc232f311f3a02b9dd39d2c522e6155a59e54844002","license":"MIT","urls":["bzz-raw://9ec08b13a5d17bde5881a5fbf2120693b1d972ba2a96122898f9831da063a248","dweb:/ipfs/QmccTkQnvS4Q5mvWD6xFWnegP7bovELJxSjZ9i61LQ8JiE"]},"contracts/UpgradeL1Bridge.sol":{"keccak256":"0x7496c59e345df4a618f3126d14a28e0705e2d12c5fecb3d6415eeebafdb5eb2c","license":"MIT","urls":["bzz-raw://2b382f1b26083d786530d5f332af2968f8b2aeef6febf3139343351139cce45d","dweb:/ipfs/QmXVLoCJndCTqZ1w1STCn7uJ42GndcsMo4ssUv9MB4T5YT"]},"sub/packages/tokamak/contracts/contracts/L1/messaging/IL1ERC20Bridge.sol":{"keccak256":"0x69f831896dcbb6bef4f2d6c8be6cd1bf352f5910074d3ce973b9f8e0a4f4c1dd","license":"MIT","urls":["bzz-raw://0688b4aa29edebf28af6130068de52ac620d2b54bf0503f3a757361e0b112384","dweb:/ipfs/QmSsPkmP2RaorGdhcxdUzqxrKxxs74PichYoPvubjCEQNC"]},"sub/packages/tokamak/contracts/contracts/L1/messaging/IL1StandardBridge.sol":{"keccak256":"0x3d511f1bcea86aa88a9c41798926ea75b5b3f455c0377e63223a123a9e714ddc","license":"MIT","urls":["bzz-raw://aeea18aa60b966dae910426ecee8990d0f2b146b35862bb4e25ea4706c69794f","dweb:/ipfs/QmcrbGwSkvyaz95jNk4BMzaNneSQ6xJ5RhBPqFdwyA7KjZ"]},"sub/packages/tokamak/contracts/contracts/L2/messaging/IL2ERC20Bridge.sol":{"keccak256":"0x4674c3c8733ca0db16c2b81d58227560df36a07ded3b637a0793564d90ac0475","license":"MIT","urls":["bzz-raw://d539caa7f4332f338102fa4ab436cb6653ced80e3e9c6ece70b041beace6641d","dweb:/ipfs/QmYgh289xa4gxEVWyDvM2hktaAvFkbo7pt6dr4EiixABqr"]},"sub/packages/tokamak/contracts/contracts/libraries/bridge/CrossDomainEnabled.sol":{"keccak256":"0x9c3cc8b7047c68a403529b15769a21c2e2668ea71db7bef51f123288009811ea","license":"MIT","urls":["bzz-raw://4b08a2b06e31e12226ebeca0a4079d60d2aad3b8297c01b9ab577222e88171bb","dweb:/ipfs/QmX6UtHkBwoobvHzdsXXsSz2yffprMPHtP2kdWPa613aeV"]},"sub/packages/tokamak/contracts/contracts/libraries/bridge/ICrossDomainMessenger.sol":{"keccak256":"0x57ab7014a2aaf4185b8d09bf923db58d2882eb9fe7ffb114ca6f984765d8f416","license":"MIT","urls":["bzz-raw://3bb45a78001f2b8bdc27d408e1235550f63c8da23f241d64a957a09130994e8d","dweb:/ipfs/QmUFvNsQ3Z7jW1hvqeiyxEaeaBmm83ECvSCXoLuzg2XT6i"]},"sub/packages/tokamak/contracts/contracts/libraries/constants/Lib_PredeployAddresses.sol":{"keccak256":"0x2bc28307af93e9716151a41a81694b56cbe513ef5eb335fb1d81f35e5db8edfa","license":"MIT","urls":["bzz-raw://bbdde142b16f7e0301b7b6a331b35ce609eaf5c9127f14f60c0008abb36e100f","dweb:/ipfs/QmdKUiY6U2vh5egW1bYtvrNhpEmo4Jo4DEwUUmBCfW4eLy"]}},"version":1}